#!/usr/bin/python3.8
from time import sleep
import sys
from subprocess import *
import re
import signal

filename = "qlen.txt"
flag = True


def signal_handler(signal, fname):
    global interrupted
    interrupted = True


signal.signal(signal.SIGINT, signal_handler)
interrupted = False

'''
Функция для мониторинга длины очереди на соединении. iface_ - нужное сетевое соединение, interval_sec_ - 
частота, с которой будут делаться замеры, fname_ - файл с результатами мониторинга
'''


def qlen_monitoring(iface_="s1-eth1", interval_sec_=0.1, fname_=filename):
    global flag
    global interrupted
    current_time = 0

    # Регуляроное выражение для поиска данных с tc
    pat_queued = re.compile(r'backlog\s[^\s]+\s([\d]+)p')
    pat_loss = re.compile(r'dropped\s[0-9]*')

    cmd = "tc -s qdisc show dev %s" % iface_
    ret = []
    # Открытие файла мониторинга на запись
    file = open("{}".format(fname_), 'w')
    # Цикл, в котором происходит мониторинг до прерывания
    tmp_loss = 0
    while not interrupted:
    # Вызов команды в tc в терминале и поиск значения длины очереди, количества отброшенных пакетов
        p = Popen(cmd, shell=True, stdout=PIPE)
        output = p.stdout.read().decode('utf-8')

        matches_queue = pat_queued.findall(output)
        matches_loss = pat_loss.findall(output)
        matches_loss = matches_loss[0].split(" ")[1]

        if matches_queue and len(matches_queue) > 1:
            ret.append(matches_queue[1])
            t = "%f" % current_time
            current_time += interval_sec_
            value_loss = str(int(matches_loss) - int(tmp_loss))
            file.write(t + ' ' + matches_queue[1] + " " + value_loss + '\n')
        tmp_loss = matches_loss
        sleep(interval_sec_)
    file.close()

try:
    iface = sys.argv[1]
    interval = float(sys.argv[2])
    file = sys.argv[3]
    qlen_monitoring(iface, interval, file)
except IndexError:
    print("Error. Please type interface name, interval_sec, file name!")
except InterruptedError:
    pass
finally:
    print("Unexpected error")
